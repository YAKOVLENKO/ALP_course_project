interface.py
============

.. py:class:: Window

   :var vk_profile: Объект класса :py:class:`Profile`
   :var root: Данные о группах пользователя для обработки
   :var data_base: Объект класса :py:class:`SavedProfiles`
   :var token: Токен
   :var api: Сессия VK

   **Оснвополагающие элементы:**

   :var group_Info: Рамка для полей с основной информацией о пользователе
   :var group_Info_B: Кнопка для размещения рамки **group_Info**
   :var group_Graph: Рамка для полей с настройками графов
   :var group_Graph_B: Кнопка для размещения рамки **group_Graph**
   :var group_Base: Рамка для полей, отвечающих за работу с базой данных
   :var group_Base_B: Кнопка для размещения рамки **Base**
   :var group_TokenSet: Рамка для полей, отвечающих за подключение
   :var group_TokenSet_B: Кнопка для размещения рамки **TokenSet**
   
   **Работа с основной информацией о пользователе:**

   :var BSaveTo: Кнопка "Сохранить". Выполняемая функция: :py:func:`bind_save`
   :var BChange: Кнопка "Изменить" . Выполняемая функция: :py:func:`bind_change`
   :var BInfoType: Кнопка "Дополнительная информация". Выполняемая функция: :py:func:`bind_another_info`
   :var label_first_infoW: Массив, хранящий в себе неизменяеые поля и рамки, принадлежащие **first_infoW**
   :var entry_first_infoW: Массив, хранящий в себе изменяеые поля, принадлежащие **first_infoW**
   :var label_second_infoW: Массив, хранящий в себе рамки, принадлежащие **second_infoW**
   :var entry_second_infoW: Массив, хранящий в себе некоторые изменяеые поля, принадлежащие **second_infoW**
   :var bunntons_second_infoW: Кнопки, принадлежащие **second_infoW**
   
   *Основная информация:*
   
   :var LFid: Рамка для поля **LId**
   :var LId: Поле, показывающее значение идентификационного номера пользователя
   :var LFFName: Рамка для поля **TFName**
   :var TFName: Поле, показвающее имя пользователя
   :var LFLName: Рамка для поля **TLName**
   :var TLName: Поле, показвающее фамиилю пользователя
   :var LFMName: Рамка для поля **TMName**
   :var TMName: Поле, показвающее отчество пользователя
   :var LFBDay: Рамка для поля **TBDay**
   :var TBDay: Поле, показвающее день рождения пользователя
   :var LFBMonth: Рамка для поля **TBMonth**
   :var TBMonth: Поле, показвающее месяц рождения пользователя
   :var LFBYear: Рамка для поля **TBYear**
   :var TBYear: Поле, показвающее год рождения пользователя
   :var LFCity: Рамка для поля **TCity**
   :var TCity: Поле, показвающее город проживания пользователя
   :var LFCountry: Рамка для поля **TCountry**
   :var TCountry: Поле, показвающее страну проживания пользователя
   :var LFMobile: Рамка для поля **TMobile**
   :var TMobile: Поле, показвающее номер мобльного телефона пользователя
   
   *Дополнительная информация*
   
   :var BCareer: Кнопка "Карьера". Выполняемая функция: :py:func:`bind_career`
   :var BEducation: Кнопка "Образование". Выполняемая функция: :py:func:`bind_education`
   :var BRelatives: Кнопка "Родственные связи". Выполняемая функция: :py:func:`bind_relations`
   :var BInterests: Кнопка "Интересы". Выполняемая функция: :py:func:`bind_interests`
   :var BLikes: Кнопка "Недавние лайки". Выполняемая функция: :py:func:`bind_likes`

   :var LFContacts: Рамка для элементов **LFTwitter LFInstagram LFSkype**
   :var LFTwitter: Рамка для поля **ETwitter**
   :var ETwitter: Поле, показвающее Twitter пользователя
   :var LFInstagram: Рамка для поля **EInstagram**
   :var EInstagram: Поле, показвающее Instagram пользователя
   :var LFSkype: Рамка для поля **ESkype**
   :var ESkype: Поле, показвающее Skype пользователя
   :var LBigInfo: Рамка для поля **TBigInfo**, кнопки **BFindLikes** и полосы прокрутки **SBigInfo**
   :var TBigInfo: Поле, отображающее: *интересы, понравившиеся посты, родственные связи, места обучения, места работы* пользователя
   :var SBigInfo: Полоса проскрутки **TBigInfo**
   :var BFindLikes: Кнопка "Обновить". Выполняемая функция:
   
   **Работа с подключением к VK:**
   
   :var TokEntry: Поле, принимающее токен
   :var TokInfo: Поле, отображающее успешность соединения
   :var TokButton: Кнопка "Ввод". Выполняемая функция:
  
   **Работа с базой данных:**
   
   :var BSearch: Кнопка "Найти". Выполняемая функция:
   :var LFSearchContacts: Рамка для поля **TSearchContacts**
   :var TSearchContacts: Поле, принимающее имя, фамилию пользователя или их фрагменты для поиска в базе данных
   :var LFSelectPerson1: Рамка для отображения пользователя из базы данных :py:class:`SavedProfiles`
   :var LFSelectPerson2: Рамка для отображения пользователя из базы данных :py:class:`SavedProfiles`
   :var LFSelectPerson3: Рамка для отображения пользователя из базы данных :py:class:`SavedProfiles`
   :var LFSelectPerson4: Рамка для отображения пользователя из базы данных :py:class:`SavedProfiles`
   :var LFSelectPerson5: Рамка для отображения пользователя из базы данных :py:class:`SavedProfiles`
   :var LFSelectPerson6: Рамка для отображения пользователя из базы данных :py:class:`SavedProfiles`
   :var EBlankForContact1: Поле, отображающее имя и фамилию найденного в базе данных :py:class:`SavedProfiles` пользователя
   :var EBlankForContact2: Поле, отображающее имя и фамилию найденного в базе данных :py:class:`SavedProfiles` пользователя
   :var EBlankForContact3: Поле, отображающее имя и фамилию найденного в базе данных :py:class:`SavedProfiles` пользователя
   :var EBlankForContact4: Поле, отображающее имя и фамилию найденного в базе данных :py:class:`SavedProfiles` пользователя
   :var EBlankForContact5: Поле, отображающее имя и фамилию найденного в базе данных :py:class:`SavedProfiles` пользователя
   :var EBlankForContact6: Поле, отображающее имя и фамилию найденного в базе данных :py:class:`SavedProfiles` пользователя
   :var EBlankForId1: Поле, отображающее идентификационный номер найденного в базе данных :py:class:`SavedProfiles` пользователя
   :var EBlankForId2: Поле, отображающее идентификационный номер найденного в базе данных :py:class:`SavedProfiles` пользователя
   :var EBlankForId3: Поле, отображающее идентификационный номер найденного в базе данных :py:class:`SavedProfiles` пользователя
   :var EBlankForId4: Поле, отображающее идентификационный номер найденного в базе данных :py:class:`SavedProfiles` пользователя
   :var EBlankForId5: Поле, отображающее идентификационный номер найденного в базе данных :py:class:`SavedProfiles` пользователя
   :var EBlankForId6: Поле, отображающее идентификационный номер найденного в базе данных :py:class:`SavedProfiles` пользователя
   :var BSelectPerson1: Кнопка "Выбрать", отвечающая за отображение информации, хранящейся в базе данных, на экран. Выполняемая функция:
   :var BSelectPerson2: Кнопка "Выбрать", отвечающая за отображение информации, хранящейся в базе данных, на экран. Выполняемая функция:
   :var BSelectPerson3: Кнопка "Выбрать", отвечающая за отображение информации, хранящейся в базе данных, на экран. Выполняемая функция:
   :var BSelectPerson4: Кнопка "Выбрать", отвечающая за отображение информации, хранящейся в базе данных, на экран. Выполняемая функция:
   :var BSelectPerson5: Кнопка "Выбрать", отвечающая за отображение информации, хранящейся в базе данных, на экран. Выполняемая функция:
   :var BSelectPerson6: Кнопка "Выбрать", отвечающая за отображение информации, хранящейся в базе данных, на экран. Выполняемая функция:
   :var EBlankForContacts: Массив полей, отображающих имена и фамилии найденных в базе данных :py:class:`SavedProfiles` пользователей
   :var EBlankForIds: Массив полей, отображающих идентификационные номера найденных в базе данных :py:class:`SavedProfiles` пользователей
   :var BSelectPersons: Массив кнопок, отвечающих за отображение информации, хранящейся в базе данных, на экран
   :var LFSelectPersons: Массив рамок, служащих для отображения пользователей из базы данных :py:class:`SavedProfiles`
   
   **Работа с поиском пользователя по ссылке на его профиль:**
   
   :var BSearchSite: Кнопка "Поиск". Выполняемая функция:
   :var TSearchSite: Поле, принимающее ссылку на страницу пользователя
   
   **Работа с графами:**
   
   :var LFGroupsGraph: Рамка, содержащая в себе элементы, отвечающие за графы **gr_Group** и **gr_GroupSix**, принадлежащие классу :py:class:`Graph`
   :var ChBGroupGraph_frame: Рамка для кнопок **ChBGroupGraph_button1** и **ChBGroupGraph_button2**
   :var ChBGroupGraph_button1: Кнопка "Вариант 1", отвечающая за отображение элементов, связанных с построением графа **gr_GroupSix**, принадлежащего классу :py:class:`Graph`. Выполняемая функция:
   :var ChBGroupGraph_button2: Кнопка "Вариант 2", отвечающая за отображение элементов, связанных с построением графа **gr_Group**, принадлежащего классу :py:class:`Graph`. Выполняемая функция:
   :var LFGGButton: Кнопка, отвечающая за размещение рамки **LFGroupsGraph**
   :var ChBGroupGraph_Info1:  Поле, показывающее информацию о графе **gr_GroupSix**, что принадлежит классу :py:class:`Graph`
   :var ChBGroupGraph_Info2: Поле, показывающее информацию о графе **gr_Group**, что принадлежит классу :py:class:`Graph`
   
   *Граф gr_CommonFr*
   
   :var LFFriendsGraph: Рамка, содержащая в себе элементы, отвечающие за граф **gr_CommonFr**, принадлежащий классу :py:class:`Graph`
   :var LFFGButton: Кнопка, отвечающая за размещение рамки **LFFriendsGraph**
   :var BFriendsGraph: Кнопка "Построить", отвечающая за построение графа  **gr_CommonFr**, принадлежащего классу :py:class:`Graph`. Выполняемая функция:
   :var BFriendsGraph_info: Поле, показывающее информацию о графе **gr_CommonFr**, что принадлежит классу :py:class:`Graph`
   
   *Граф gr_GroupSix*
   
   :var BGroupsGraph: кнопка "Построить", отвечающая за построение графов  **gr_Group** и **gr_GroupSix**, принадлежащих классу :py:class:`Graph`. Выполняемая функция:
   :var ChBGroupGraph_Entry1: Поле,принимающее ссылку на группу, которую нужно включить в список вершин, принадлежащих графу **gr_GroupSix** класса :py:class:`Graph`
   :var ChBGroupGraph_Entry2: Поле,принимающее ссылку на группу, которую нужно включить в список вершин, принадлежащих графу **gr_GroupSix** класса :py:class:`Graph`
   :var ChBGroupGraph_Entry3: Поле,принимающее ссылку на группу, которую нужно включить в список вершин, принадлежащих графу **gr_GroupSix** класса :py:class:`Graph`
   :var ChBGroupGraph_Entry4: Поле,принимающее ссылку на группу, которую нужно включить в список вершин, принадлежащих графу **gr_GroupSix** класса :py:class:`Graph`
   :var ChBGroupGraph_Entry5: Поле,принимающее ссылку на группу, которую нужно включить в список вершин, принадлежащих графу **gr_GroupSix** класса :py:class:`Graph`
   :var ChBGroupGraph_Entry6: Поле,принимающее ссылку на группу, которую нужно включить в список вершин, принадлежащих графу **gr_GroupSix** класса :py:class:`Graph`
   
   :var Entries_ofGroupGraph: Массив, содерщащий поля, принимающие ссылки на группы, которые нужно включить в список вершин, принадлежащих графу **gr_GroupSix** класса :py:class:`Graph`

   *Граф gr_Group*
   
   :var ChBGroupGraph_CounterText: Поле, показывающее назначение поля **ChBGroupGraph_Counter**
   :var ChBGroupGraph_Counter: Поле, принимающее количество групп, которое нужно включить в качестве вершин в граф **gr_Group** класса :py:class:`Graph`
   
   **Работа с фото**
   
   :var LPhoto: Рамка для фотографии **IPhoto**
   :var IPhoto: Фотография пользователя

   .. py:method:: __init__()

      Конструктор

   .. py:method:: pack_searchContacts()

      Функция для оформления зоны работы с базой данных и активации работы кнопок, входящих в нее
      
   .. py:method:: pack_tokenW()

      Функция для оформления зоны работы с токеном и активации работы кнопок, входящих в нее

   .. py:method:: pack_graphW()

      Функция для оформления зоны работы с графами и активации работы кнопок, входящих в нее

   .. py:method::add_lineToVk()

      Функция для проверки соединения с профилем VK

   .. py:method:: getUserId(link)

      Функция для получения идентификационного номера пользователя
      
      :param link: Ссылка на пользователя VK

   .. py:method:: set_text(field, text)

      Функция для установления текста в поле
      
      :param field: Поле, в которое необходимо установить текст
      :param text: Текст, который необходимо установить

   .. py:method:: set_infoW()

      Функция для общего оформления зоны работы с основной информацией о пользователе
      
   .. py:method:: pack_first_infoW()

      Функция для оформления зоны работы с основной информацией о пользователе

   .. py:method:: forget_first_infoW()

      Функция, закрывающая все поля, входящие в зону работы с основной информацией о пользователе

   .. py:method:: pack_second_infoW()

      Функция для оформления зоны работы с дополнительной информацией о пользователе

   .. py:method:: forget_second_infoW()

      Функция, закрывающая все поля, входящие в зону работы с дополнительной информацией о пользователе

   .. py:method:: block_entry()

      Функция, блокирующая ввод текста в поля основной и дополнительной информации о пользователе

   .. py:method:: unblock_entry()

      Функция, разблокирующая ввод текста в поля основной и дополнительной информации о пользователе

   .. py:method:: set_entry()

      Функция, устанавливающая значения из объекта класса :py:class:`Profile` в поля с основной и дополнительной информацией о пользователе

   .. py:method:: clear_entry()

      Функция, очищающая поля с основной и дополнительной информацией о пользователе

   .. py:method:: set_buttons_infoW()

      Функция, устанавливающая работу кнопок, входящих в зону работы с основной и дополнительной информацей о пользователе

   .. py:method:: set_default_W()

      Функция, размечающая основные зоны работы посредством установления рамок на главный экран

   .. py:method:: bind_change(event)

      Функция, выполняющаяся при нажании на кнопку **BChange**

      Меняет как свои функции и внешний вид, так и других кнопок. Позволяет: 
         * Менять значения полей, содержащих основную и дополнительную информацию о пользователе
         * Отменять изменения, внесенные в поля, содержащие основную и дополнительную информацию о пользователе
      
      :param event: Событие, при котором функция начинает выполняться

   .. py:method:: bind_save(event)

      Функция, выполняющаяся при нажании на кнопку **BSaveTo**

      Меняет как свои функции и внешний вид, так и других кнопок. Позволяет:
         * Сохранять профиль в базу данных
         * Принимать изменения в полях с основной и дополнительной информацией о пользователе
      
      :param event: Событие, при котором функция начинает выполняться

   .. py:method:: bind_another_info(event)

      Функция, выполняющаяся при нажании на кнопку **BInfoType**

      Меняет свои функции и внешний вид. Показывает и скрывает поля с основной и дополнительной информацией о пользователе 
      
      :param event: Событие, при котором функция начинает выполняться

   .. py:method:: bind_bind_career(event)

      Функция, выполняющаяся при нажании на кнопку **BCareer**

      Показывает информацию о карьере пользователя в поле **TBigInfo**
      
      :param event: Событие, при котором функция начинает выполняться

   .. py:method:: bind_education(event)

      Функция, выполняющаяся при нажании на кнопку **BEducation**

      Показывает информацию об образовании пользователя в поле **TBigInfo**
      
      :param event: Событие, при котором функция начинает выполняться

   .. py:method:: bind_relations(event)

      Функция, выполняющаяся при нажании на кнопку **BRelatives**

      Показывает информацию о родственных связях пользователя в поле **TBigInfo**
      
      :param event: Событие, при котором функция начинает выполняться

   .. py:method:: bind_likes(event)

      Функция, выполняющаяся при нажании на кнопку **BLikes**

      Показывает информацию о понравившихся пользователю постах в поле **TBigInfo**
      
      :param event: Событие, при котором функция начинает выполняться

   .. py:method:: bind_interests(event)

      Функция, выполняющаяся при нажании на кнопку **BInterests**

      Показывает информацию об интересах пользователя в поле **TBigInfo**
      
      :param event: Событие, при котором функция начинает выполняться










